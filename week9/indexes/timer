#!/bin/bash
# change directory to week5
#cd bren-meds213-class-data/week5


# parse command line arguments
if [[ $# -ne 5 ]]; then
    echo "usage: $0 label num_reps query db_file csv_file"
    exit 1
fi

label=$1
reps=$2
query=$3
db_file=$4
csv_file=$5

#query="select count(*) from bird_nests where book_page = 'b11.6' and year = 2011 and site = 'eaba' and species = 'amgp' and observer = 'dkessler' and date_found = '2011-06-24' and how_found = 'searcher' and clutch_max = 4 and floatAge = 6.0 and ageMethod = 'float'"
query="select count(*) from Bird_nests where site='nome' and ageMethod = 'float' and year between 1998
and 2008"

# check if the CSV file exists
if [[ ! -f "$csv_file" ]]; then
    # create a blank CSV file with header
    echo "label,time_per_iteration" > "$csv_file"
fi

#nd=$(sqlite3 $db_file "select count(distinct $label) from bird_nests" >& /dev/null)

if [ $label != none ]; then
    sqlite3 $db_file "create index bni on bird_nests ($label)"
    sqlite3 $db_file "analyze bni"
fi

# get the current time in seconds since the Unix epoch
time1=$(date +%s)

# loop through the number of iterations specified
for i in $(seq $reps); do
    # execute the SQL query and redirect the output to stdout
    sqlite3 "$db_file" <<EOF > /dev/null 2>&1
    $query
EOF

    # print a message indicating the current loop iteration
    echo "this is loop iteration $i"
done

# get the current time in seconds since the Unix epoch
time2=$(date +%s)

# calculate the total elapsed time by subtracting the start time from the end time
total_elapsed_time=$((time2-time1))

# calculate the average time per loop iteration and store it in the 'elapsed' variable
elapsed=$(python -c "print($total_elapsed_time/$reps)")

# append the result to the CSV file
echo "$label,$elapsed" >> "$csv_file"

# print the average time per loop iteration
echo "average time per loop iteration: $elapsed seconds"

if [ $label != none ]; then
    sqlite3 $db_file "drop index bni"
fi
